---
- name: Set base install command
  ansible.builtin.set_fact:
    install_command: /usr/local/bin/newrelic install -y

- name: Build full install command
  ansible.builtin.import_tasks: build_command.yml

- name: Set log file path if verbose output
  when: verbosity is defined
  ansible.builtin.set_fact:
    log_file_path: "{{ verbosity_on_log_file_path_linux }}/newrelic-cli-{{ verbosity }}.log"

- name: Set default install task timeout
  when: install_timeout_seconds is undefined
  ansible.builtin.set_fact:
    install_timeout_seconds: "{{ default_install_timeout_seconds }}"

- name: Download install.sh
  ansible.builtin.get_url:
    url: "{{ cli_install_url }}"
    dest: "{{ cli_install_download_location }}/install.sh"
    mode: "777"

- name: Run install.sh
  ansible.builtin.command: "{{ cli_install_download_location }}/install.sh"
  register: install_script
  changed_when: install_script.rc == 0

- name: Report install script output
  ansible.builtin.debug:
    var: install_script.stdout_lines

- name: Save verbose output to log file
  when: verbosity is defined
  ansible.builtin.set_fact:
    install_command: "{{ install_command }} 2>&1 | tee {{ log_file_path }}"

- name: Report verbose output log file path
  when: verbosity is defined
  ansible.builtin.debug:
    msg: Logs will be saved on host at {{ log_file_path }}

- name: Attach MySQL root password if obtained from remote host
  when: mysql_root_password_from_host is defined
  ansible.builtin.set_fact:
    install_command: "NEW_RELIC_MYSQL_ROOT_PASSWORD={{ mysql_root_password_from_host }} {{ install_command }}"

- name: Run CLI install
  ansible.builtin.shell: "{{ install_command }}"
  become: true
  register: result
  changed_when: true
  async: "{{ install_timeout_seconds }}"
  poll: 10
  environment:
    NEW_RELIC_CLI_SKIP_CORE: "1"

- name: Set output
  ansible.builtin.set_fact:
    output: "{{ result.stdout_lines }}"
